<div class="row-fluid">
  <div class="col-md-6">
    <div id="map" style='width: 100%; height: 600px;'></div>
  </div>
  <div class="col-md-6">
    <%# if user_signed_in? %>
      <%#= link_to new_good_path do %>
<!--        <button class="btn btn-primary">Add new goods</button>-->
      <%# end %>
<!--      <hr>-->
    <%# end %>

    <button class="" id="loc" onclick="explore_mode()">
      Explore Mode
    </button>

    <% if params[:latitude].nil? or params[:longitude].nil? %>
      <button class="<%= params[:sort] == "name" ? "hilite bg-warning" : "" %>">
        <%= link_to "Sort By Name", goods_path(:sort => "name"), :id => 'goods_name_header' %>
      </button>

      <button class="<%= params[:sort] == "update_time" ? "hilite bg-warning" : "" %>">
        <%= link_to "Sort By Time", goods_path(:sort => "update_time"), :id => 'update_time_header' %>
      </button>

      <button class="">
        <%= link_to "Clear Sort Status", goods_path(:clear => "clear"), :id => 'clear_order_button' %>
      </button>
    <% else %>
      <button class="">
        <%= link_to "Exit Explore Mode", goods_path, :id => 'exit_explore' %>
      </button>
    <% end %>

    <p>Search for specific items:</p>  
    <input class="form-control" id="myInput" type="text" placeholder="Item Name...">
    <br>

    <ul class="list-group" id="myList">
      
      <% @goods.each do |good| %>
        <li class="list-group-item">
          <div class="row-fluid">
            <h2><%= link_to good.name, good %></h2>
            <p><%= good.address %></p>
          </div>
        </li>
      <% end %>
    </ul>

  </div>
</div>

<% content_for(:after_js) do %>
  <script type="text/javascript">
    var handler = Gmaps.build('Google');
    handler.buildMap({ internal: { id: 'map' } }, function(){
      markers = handler.addMarkers(<%= raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      if (markers.length == 0) {
        handler.getMap().setZoom(2);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
      }
    });

    // let map, infoWindow;
    // infoWindow = new google.maps.InfoWindow();
    //
    // // const locationButton = document.createElement("button");
    // // var MyDiv =document.getElementById("loc");
    // const locationButton = document.getElementById("loc");
    // var curPos;
    //
    // locationButton.textContent = "Explore";
    // locationButton.classList.add("custom-map-control-button");
    //
    // locationButton.addEventListener("click", () => {
    //     // Try HTML5 geolocation.
    //     if (navigator.geolocation) {
    //         navigator.geolocation.getCurrentPosition(
    //             (position) => {
    //                 curPos = {
    //                     lat: position.coords.latitude,
    //                     lng: position.coords.longitude,
    //                 };
    //
    //                 // infoWindow.setPosition(pos);
    //                 // infoWindow.setContent("Location found.");
    //                 // infoWindow.open(map);
    //                 // map.setCenter(pos);
    //                 console.log(curPos)
    //             },
    //             () => {
    //                 handleLocationError(true, infoWindow, handler.getCenter());
    //             }
    //         );
    //     } else {
    //         // Browser doesn't support Geolocation
    //         handleLocationError(false, infoWindow, handler.getCenter());
    //     }
    // });

    // MyDiv.appendChild(locationButton);

    // function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    //     infoWindow.setPosition(pos);
    //     infoWindow.setContent(
    //         browserHasGeolocation
    //             ? "Error: The Geolocation service failed."
    //             : "Error: Your browser doesn't support geolocation."
    //     );
    //     // infoWindow.open(map);
    // }


  </script>

  <script>
    function explore_mode() {
        let curPos;

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    curPos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    };
                    console.log(curPos)
                    window.location.href = '/goods?latitude=' + curPos.lat + '&longitude=' + curPos.lng
                }
            );
        }
    }
  </script>


  <script>
    $(document).ready(function(){
      $("#myInput").on("keyup", function() {
        var value = $(this).val().toLowerCase();
        $("#myList li").filter(function() {
          $(this).toggle($(this).find('h2:first').text().toLowerCase().indexOf(value) > -1)
        });
        
      });
    });
  </script>
  
<% end %>
